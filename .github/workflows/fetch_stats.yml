name: Fetch latest PyPI and Homebrew download stats

on:
  workflow_dispatch:
  schedule:
    - cron:  '41 1 * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
    - name: Fetch latest PyPI stats
      run: |
        eval "python fetch_stats.py stats.json --verbose --sleep 11 datasette sqlite-utils $(curl -s 'https://datasette.io/content.json?sql=select%20group_concat(substr(nameWithOwner%2C%20instr(nameWithOwner%2C%20%27%2F%27)%20%2B%201)%2C%20%27%20%27)%20from%20datasette_repos%3B&_shape=arrayfirst' | jq '.[0]' -r)"
    - name: Fetch latest Homebrew stats
      run: |
        curl https://formulae.brew.sh/api/formula/datasette.json | jq . > homebrew-datasette.json
        curl https://formulae.brew.sh/api/formula/sqlite-utils.json | jq . > homebrew-sqlite-utils.json
    - name: Fetch latest GitHub releases stats for datasette-app
      run: |
        curl https://api.github.com/repos/simonw/datasette-app/releases | jq . > datasette-app-releases.json
    - name: Commit and push if s changed
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push
